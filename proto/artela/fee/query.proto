syntax = "proto3";
package artela.fee;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "artela/fee/params.proto";

option go_package = "github.com/artela-network/artela-rollkit/x/fee/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/artela/fee/params";
  }

  // BaseFee queries the base fee of the parent block of the current block.
  rpc BaseFee(QueryBaseFeeRequest) returns (QueryBaseFeeResponse) {
    option (google.api.http).get = "/artela/fee/v1/base_fee";
  }

  // BlockGas queries the gas used at a given block height
  rpc BlockGas(QueryBlockGasRequest) returns (QueryBlockGasResponse) {
    option (google.api.http).get = "/artela/fee/v1/block_gas";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryBaseFeeRequest defines the request type for querying the EIP1559 base
// fee.
message QueryBaseFeeRequest {}

// QueryBaseFeeResponse returns the EIP1559 base fee.
message QueryBaseFeeResponse {
  // base_fee is the EIP1559 base fee
  string base_fee = 1 [(gogoproto.customtype) = "cosmossdk.io/math.Int"];
}

// QueryBlockGasRequest defines the request type for querying the EIP1559 base
// fee.
message QueryBlockGasRequest {}

// QueryBlockGasResponse returns block gas used for a given height.
message QueryBlockGasResponse {
  // gas is the returned block gas
  int64 gas = 1;
}